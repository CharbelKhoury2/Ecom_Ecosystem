name: dbt CI/CD Pipeline

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'ecom_metrics/**'
      - '.github/workflows/dbt-ci.yml'
  push:
    branches: [ main ]
    paths:
      - 'ecom_metrics/**'
      - '.github/workflows/dbt-ci.yml'

env:
  DBT_PROFILES_DIR: ./ecom_metrics
  SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

jobs:
  dbt-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dbt and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-postgres==1.9.1
        pip install dbt-core==1.10.11
        
    - name: Verify dbt installation
      run: |
        dbt --version
        
    - name: Change to dbt project directory
      run: cd ecom_metrics
      
    - name: Install dbt packages
      run: |
        cd ecom_metrics
        dbt deps
        
    - name: Check dbt project configuration
      run: |
        cd ecom_metrics
        dbt debug --target dev
        
    - name: Run dbt seed (if seed files exist)
      run: |
        cd ecom_metrics
        if [ -d "seeds" ] && [ "$(ls -A seeds)" ]; then
          echo "Running dbt seed..."
          dbt seed --target dev
        else
          echo "No seed files found, skipping dbt seed"
        fi
      continue-on-error: true
        
    - name: Run dbt models
      run: |
        cd ecom_metrics
        dbt run --target dev
        
    - name: Run dbt tests
      run: |
        cd ecom_metrics
        dbt test --target dev
        
    - name: Generate dbt docs
      run: |
        cd ecom_metrics
        dbt docs generate --target dev
        
    - name: Upload dbt artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dbt-artifacts
        path: |
          ecom_metrics/target/
          ecom_metrics/logs/
        retention-days: 30
        
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read dbt test results
          let testResults = 'dbt tests completed';
          try {
            const runResults = fs.readFileSync('ecom_metrics/target/run_results.json', 'utf8');
            const results = JSON.parse(runResults);
            
            const totalTests = results.results.length;
            const passedTests = results.results.filter(r => r.status === 'success').length;
            const failedTests = totalTests - passedTests;
            
            testResults = `
            ## dbt Test Results üìä
            
            - **Total Tests**: ${totalTests}
            - **Passed**: ‚úÖ ${passedTests}
            - **Failed**: ‚ùå ${failedTests}
            
            ${failedTests > 0 ? '‚ö†Ô∏è Some tests failed. Please review the logs.' : 'üéâ All tests passed!'}
            `;
          } catch (error) {
            testResults = 'Could not parse dbt test results';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: testResults
          });

  dbt-production-deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: dbt-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dbt
      run: |
        python -m pip install --upgrade pip
        pip install dbt-postgres==1.9.1
        pip install dbt-core==1.10.11
        
    - name: Install dbt packages
      run: |
        cd ecom_metrics
        dbt deps
        
    - name: Run dbt in production
      run: |
        cd ecom_metrics
        dbt run --target prod
        
    - name: Run production tests
      run: |
        cd ecom_metrics
        dbt test --target prod
        
    - name: Generate and deploy docs
      run: |
        cd ecom_metrics
        dbt docs generate --target prod
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "‚úÖ dbt models successfully deployed to production!"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå dbt production deployment failed!"
        exit 1

  data-quality-checks:
    needs: dbt-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dbt
      run: |
        python -m pip install --upgrade pip
        pip install dbt-postgres==1.9.1
        
    - name: Install dbt packages
      run: |
        cd ecom_metrics
        dbt deps
        
    - name: Run data quality checks
      run: |
        cd ecom_metrics
        # Run specific data quality tests
        dbt test --select tag:data_quality --target dev
        
    - name: Check for data freshness
      run: |
        cd ecom_metrics
        dbt source freshness --target dev
        
    - name: Validate model performance
      run: |
        cd ecom_metrics
        # Check if models run within acceptable time limits
        timeout 300 dbt run --select mtr_true_pnl --target dev
        
    - name: Generate data lineage
      run: |
        cd ecom_metrics
        dbt docs generate --target dev
        
    - name: Upload data quality report
      uses: actions/upload-artifact@v3
      with:
        name: data-quality-report
        path: |
          ecom_metrics/target/sources.json
          ecom_metrics/target/catalog.json
          ecom_metrics/target/manifest.json
        retention-days: 7